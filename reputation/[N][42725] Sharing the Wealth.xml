<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- Original contribution by EchoTiger -->
    <!-- All credit to the amazing world quest team on this one -->
    <!-- https://www.thebuddyforum.com/honorbuddy-forum/honorbuddy-profiles/269163-progress-world-quests.html -->
    <Name>42725-[N]-[QUEST]-Wq-Sharing the Wealth-Zinner.xml</Name>
    <MinDurability>0.3</MinDurability>
    <MinFreeBagSlots>3</MinFreeBagSlots>
    <SellGrey>true</SellGrey>
    <SellWhite>false</SellWhite>
    <SellGreen>false</SellGreen>
    <SellBlue>false</SellBlue>
    <SellPurple>false</SellPurple>
    <MailGrey>false</MailGrey>
    <MailWhite>true</MailWhite>
    <MailGreen>true</MailGreen>
    <MailBlue>true</MailBlue>
    <MailPurple>true</MailPurple>
    <TargetElites>true</TargetElites>
    <QuestOrder>
        <CustomBehavior File="RunCode" Type="Definition">
            <![CDATA[
            
    public class WorldQuestData
    {
        public int ID;
        public string Name;
        public DateTime ExpireTime;
    }
    public static class WorldQuestInfo
    {
        static List<WorldQuestData> _cache = new List<WorldQuestData>();
        static internal bool _dirty = true;
        static internal bool _setup = false;
        static WorldQuestInfo()
        {
            Setup();
        }
        public static void Setup()
        {
            if (_setup)
                return;
            Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);
            UpdateWorldQuests();
            _setup = true;
        }
        public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
        {
            _dirty = true;
        }
        public static bool HasWorldQuest(int questid)
        {
            UpdateWorldQuests();
            var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();
            if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
                return false;
            return true;
        }
        public static void UpdateWorldQuests()
        {
            if (!_dirty)
                return;
            _cache = new List<WorldQuestData>();
            
            var player = StyxWoW.Me;
            int BrokenIslesMapArea = 1007;
            var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
            
            var NumZones = int.Parse(ret[0]);
            for (int i = 1; i < NumZones; ++i)
            {
                ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));
                var ZoneID = int.Parse(ret[0]);
                var ZoneName = ret[1];
                var ZoneDepth = int.Parse(ret[2]);
                if (ZoneDepth > 1) //Do not look at subzones
                {
                    Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
                    continue;
                }
                string ToRun = string.Format(@"     local questids = {{}};
                                                    local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});
                                                    if taskInfo then
                                                                    for i, info in ipairs(taskInfo) do
                                                                        if HaveQuestData(info.questId) then
                                                                            if QuestUtils_IsQuestWorldQuest(info.questId) then
                                                                                    table.insert(questids, info.questId);
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                   return unpack(questids);
                                                ", ZoneID, BrokenIslesMapArea);
                ret = Lua.GetReturnValues(ToRun);
                foreach (var q in ret)
                {
                    int questid = int.Parse(q);
                    //TimeLeft is in minutes
                    var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
                    var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));
                    Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);
                    var data = new WorldQuestData();
                    data.ID = questid;
                    data.Name = QuestInfo[0];
                    data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
                    _cache.Add(data);
                }
            }
            _dirty = false;
        }
        public static bool IsWorldQuest(int questid)
        {
            string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);
            var ret = Lua.GetReturnValues(lua);
            if (ret[3] == null)
                return false;
            return true;
        }
    }
                ]]>
        </CustomBehavior>
        <!-- mask usage code -->
        <CustomBehavior File="RunCode" Type="Definition">
            <![CDATA[
                bool ShouldCastMask()
                    {
                        return !Me.IsCasting && Me.IsAlive && IsInCity() && (!Me.HasAura(202477) && !Me.HasAura(208824));
                    }

                    async Task CastMask()
                    {
                        if( HasItem(136600) )
                        {
                            var item = StyxWoW.Me.BagItems.FirstOrDefault(x => x.Entry == 136600);
                            Logging.Write(System.Windows.Media.Colors.Yellow, "[Zak]: using " + item.Name);
                            item.Use();
                            await Coroutine.Sleep(2200);
                            await Coroutine.Wait(1600, () => !SpellManager.GlobalCooldown);
                            await Coroutine.Wait(2500, () => !Me.IsCasting);
                        }
                        else
                        {
                            Lua.DoString("ExtraActionButton1:Click();");
                        }
                        await Coroutine.Yield();
                    }

                    bool IsInCity()
                    {
                        return  Me.ZoneId == 7637 && //Suramar
                                (Me.SubZoneId == 7963 || //The Grand Promenade
                                Me.SubZoneId == 8021 || //Lunastre Estate
                                Me.SubZoneId == 8434 || //Starcaller Retreat
                                Me.SubZoneId == 8382 || //The Waning Crescent
                                Me.SubZoneId == 8383 || //Artisan's Gallery
                                Me.SubZoneId == 8395 || //Astravar Harbor
                                Me.SubZoneId == 8385 || //Evermoon Bazaar
                                Me.SubZoneId == 7970 || //Evermoon Commons
                                Me.SubZoneId == 8487 || //Evermoon Terrace
                                Me.SubZoneId == 8386 || //Shimmershade Garden
                                Me.SubZoneId == 8398 || //Terrace of Order
                                Me.SubZoneId == 8345 || //Estate of the First Arcanist
                                Me.SubZoneId == 8149 || //Twilight Vineyards
                                Me.SubZoneId == 8353 || //Concourse of Destiny
                                Me.SubZoneId == 8397 || //Terrace of Enlightenment
                                Me.SubZoneId == 8441 || //Moonbeam Causeway
                                Me.SubZoneId == 8436 || //Sunset Park
                                Me.SubZoneId == 8351 || //The Menagerie
                                Me.SubZoneId == 8379 || //The Gilded Market
                                Me.SubZoneId == 8378 || //Moonlit Landing
                                Me.SubZoneId == 8431 || //Sanctum of Order
                                Me.SubZoneId == 8380 || //Midnight Court
                                Me.SubZoneId == 8384 || //Siren's Vigil
                                Me.SubZoneId == 8487 ||
                                Me.SubZoneId == 8148);   //Suramar City
                    }
            ]]>
        </CustomBehavior>
        <If Condition="IsQuestCompleted(42487) &amp;&amp; !IsInCity()">
            <CustomBehavior File="InteractWith" MobIds="254137" X="1786.485" Y="4630.706" Z="124.1123" />
        </If>
        <While Condition="WorldQuestInfo.HasWorldQuest(42725)">
            <!-- Get in range of quest to activate -->
            <CustomBehavior File="Hooks\Avoid" AvoidName="DispelIllusions" Command="Add" AvoidWhen="UNIT.CastingSpellId == 203750" Radius="18" IgnoreLootInAvoid="true" IgnoreIfBlocking="true" />
            <CustomBehavior File="Hooks\DoWhen" UseWhen="ShouldCastMask()" LogExecution="true" ActivityName="apply_mask" StopMovingToConductActivity="true" AllowUseWhileMounted="true">
                <CustomBehavior File="RunCode" Code="CastMask()" />
                <CustomBehavior File="WaitTimer" WaitTime="4000" />
            </CustomBehavior>
            <RunTo X="612.541" Y="3864.349" Z="5.685545" />
            <PickUp Nav="Fly" QuestName="Sharing the Wealth" QuestId="42725" GiverName="" GiverId="" />
            <Objective QuestName="Sharing the Wealth" QuestId="42725" Type="CollectItem" Nav="Fly" ItemId="137295" CollectCount="20" />
            <TurnIn Nav="Fly" QuestName="Sharing the Wealth" QuestId="42725" TurnInName="" TurnInId="" />
        </While>
        <While Condition="WorldQuestInfo.HasWorldQuest(42725)">
            <CustomBehavior File="Hooks\Avoid" AvoidName="DispelIllusions" Command="Add" AvoidWhen="UNIT.CastingSpellId == 203750" Radius="18" IgnoreLootInAvoid="true" IgnoreIfBlocking="true" />
            <CustomBehavior File="Hooks\DoWhen" UseWhen="ShouldCastMask()" LogExecution="true" ActivityName="apply_mask" StopMovingToConductActivity="true" AllowUseWhileMounted="true">
                <CustomBehavior File="RunCode" Code="CastMask()" />
                <CustomBehavior File="WaitTimer" WaitTime="4000" />
            </CustomBehavior>
            <RunTo X="612.541" Y="3864.349" Z="5.685545" />
            <CustomBehavior File="InteractWith" MobIds="250240, 250239" NumOfTimes="20" TerminateWhen="IsQuestCompleted(42725)">
                <HuntingGrounds>
                    <Hotspot X="576.3559" Y="3893.72" Z="7.779054" />
                    <Hotspot X="575.9879" Y="3893.317" Z="7.778745" />
                    <Hotspot X="579.809" Y="3909.997" Z="6.123071" />
                    <Hotspot X="555.908" Y="3863.365" Z="7.803245" />
                    <Hotspot X="555.3854" Y="3862.97" Z="7.816048" />
                    <Hotspot X="554.7031" Y="3862.7" Z="7.804747" />
                    <Hotspot X="649.2899" Y="3912.712" Z="6.715694" />
                    <Hotspot X="647.9028" Y="3914.741" Z="5.68533" />
                    <Hotspot X="618.757" Y="3927.531" Z="7.873136" />
                    <Hotspot X="550.4427" Y="3896.66" Z="6.038138" />
                    <Hotspot X="549.9496" Y="3896.296" Z="6.038138" />
                    <Hotspot X="568.0938" Y="3920.139" Z="6.937858" />
                    <Hotspot X="568.2083" Y="3920.838" Z="6.937842" />
                    <Hotspot X="568.1441" Y="3921.618" Z="6.938069" />
                    <Hotspot X="584.2621" Y="3932.443" Z="6.886942" />
                    <Hotspot X="563.5677" Y="3920.25" Z="6.938112" />
                    <Hotspot X="550.1424" Y="3821.125" Z="6.88411" />
                    <Hotspot X="643.7986" Y="3935.566" Z="6.802264" />
                    <Hotspot X="581.8871" Y="3936.019" Z="6.81927" />
                    <Hotspot X="582.3038" Y="3936.373" Z="6.81927" />
                    <Hotspot X="582.816" Y="3936.631" Z="6.81927" />
                    <Hotspot X="609.191" Y="3943.577" Z="8.271217" />
                    <Hotspot X="529.1893" Y="3873.267" Z="6.813961" />
                    <Hotspot X="528.7552" Y="3872.776" Z="6.814959" />
                    <Hotspot X="530.4271" Y="3840.066" Z="6.815413" />
                    <Hotspot X="653.0955" Y="3941.476" Z="7.733488" />
                    <Hotspot X="580.467" Y="3955.929" Z="6.667636" />
                    <Hotspot X="553.2031" Y="3943.002" Z="6.815486" />
                    <Hotspot X="579.4114" Y="3957.583" Z="6.667645" />
                    <Hotspot X="553.1528" Y="3943.723" Z="6.814153" />
                    <Hotspot X="552.5608" Y="3943.295" Z="6.813429" />
                </HuntingGrounds>
            </CustomBehavior>
            <CustomBehavior File="Misc\RunLua" WaitTime="1500" Lua="WorldMapFrame:Show()" />
            <CustomBehavior File="Misc\RunLua" Lua="WorldMapFrame:Hide()" />
        </While>
        <RunTo X="437.0507" Y="3999.755" Z="1.388258" />
        <If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0">
            <CustomBehavior File="UseItem" ItemId="141605" WaitTime="2000" />
        </If>
        <CustomBehavior File="LoadProfile" ProfileName="./[N] Daily Loader" RememberProfile="false" />
    </QuestOrder>
</HBProfile>
